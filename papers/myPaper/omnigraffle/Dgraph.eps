%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 130.000000 166.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.3 (Build 14D136) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 130 166
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 130 166
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Italic
%!FontType1-1.0: HelveticaNeue-Italic 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Italic def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /A put
dup 34 /B put
dup 35 /C put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -993 1 index div -481 2 index div 1511 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


00BA00020001000C2B01BA00030003000C2B01BF000400410035002A001E0012000000122BBF0005003A00300025001B0010000000122B00BF000200450039002C00200013000000122BBF0003004E0040003200240016000000122B00BA0006000400112BB8000120457D691844B800002B0000
00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/A 1 def
/B 2 def
/C 3 def
/u20BC 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-993 -481 1511 1077}def
/UniqueID 4179611 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C959DCA2B25064CB2EE653C8C5E0D08068DD956094993D87692D1893E7882B3267FBEDEB677437CF14D1C34FD3E8DFE75D6B63DBDEE6A1CE1623E98A63E314C01ACF12A7A90D42F904B79B9BFCFF9F02610523697241BF57B810790BB2A9FCB61BBEC2026658AE2172A6C440909370FB4E71655230DF00FCF9BE8D299CB0176F55F265A8A95EF80CFB7B8496DBB58BCD3D98A18151572F0CEA52B22A9295C431FA65B20034B16C0375D6834B54F77E7DF3F82BDBEC8DCD5085911792C7A18654D3684E11BC9393521D493433F1714AC882983EF8E90C7425F864BDCD2EFFD2F85860E2A34B111FE33A01BCF55A632B1F693B69BE788B54CCC865E5C213290C7C7152895C5B4AEC4F2AD98BE06D9924C2AB122062A4B21BE38689439DB9D81EB4AE1CD55C502E49FE9D5542379B94B864602A3FB0898AA8175B6C0B638C4D3364E8DC11D3EF95C04ECA5E484299CDE7C0208F4835A561B11C691CFA9C45388DD7C0313E7E4FA290D52996AA66EE378368FB4301EEBD98E8DFF8DA1525D7DA43B836AA11DF5C9996A7DB26EBE22585E913AB7A8DD110809E8CD4EE6A4A13760703F5C2D9BF0D06193442C9FD682F732317D23A08C82A7883FF0AD2428413213D2A9BDF612950F524251B18EF8E6CFCD8E8DC37192651E44FADF95D253DFC04FAA611E871CCC0633BCA1620E53E191A1DDE4FB86603C12C7D4B06A1BB7D8A82C3D7741773E8163ED89B18A250BB49E3A46C3D3E75574FF72BBD2F423F8A2BEEA553251

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Italic cguidfix
/F1.1/HelveticaNeue-Italic renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 130 166 rc
-7 164 m
646 164 l
646 -478 l
-7 -478 l
h
-7 164 m
f
79.045929 151.04593 m
84.318031 145.77385 84.318031 137.22615 79.045929 131.95407 c
73.773857 126.68197 65.226143 126.68197 59.954067 131.95407 c
54.681969 137.22615 54.681969 145.77385 59.954067 151.04593 c
65.226143 156.31804 73.773857 156.31804 79.045929 151.04593 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -7 164 cm
86.045929 12.954069 m
91.318031 18.226143 91.318031 26.773857 86.045929 32.045933 c
80.773857 37.318031 72.226143 37.318031 66.954071 32.045933 c
61.681969 26.773857 61.681969 18.226143 66.954071 12.954069 c
72.226143 7.6819682 80.773857 7.6819682 86.045929 12.954069 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 69.5 141.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.336 6 m
(!)s
/Cs1 SC
1 1 1 sc
CM
115.04593 97.045929 m
120.31803 91.773857 120.31803 83.226143 115.04593 77.954071 c
109.77386 72.681969 101.22614 72.681969 95.954071 77.954071 c
90.681969 83.226143 90.681969 91.773857 95.954071 97.045929 c
101.22614 102.31803 109.77386 102.31803 115.04593 97.045929 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -7 164 cm
122.04593 66.954071 m
127.31803 72.226143 127.31803 80.773857 122.04593 86.045929 c
116.77386 91.318031 108.22614 91.318031 102.95407 86.045929 c
97.681969 80.773857 97.681969 72.226143 102.95407 66.954071 c
108.22614 61.681969 116.77386 61.681969 122.04593 66.954071 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 105.5 87.5 cm
-5.336 6 m
(!)s
/Cs1 SC
1 1 1 sc
CM
34.045933 97.045929 m
39.318031 91.773857 39.318031 83.226143 34.045933 77.954071 c
28.773857 72.681969 20.226143 72.681969 14.954069 77.954071 c
9.6819677 83.226143 9.6819677 91.773857 14.954069 97.045929 c
20.226143 102.31803 28.773857 102.31803 34.045933 97.045929 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -7 164 cm
41.045933 66.954071 m
46.318031 72.226143 46.318031 80.773857 41.045933 86.045929 c
35.773857 91.318031 27.226143 91.318031 21.954069 86.045929 c
16.681969 80.773857 16.681969 72.226143 21.954069 66.954071 c
27.226143 61.681969 35.773857 61.681969 41.045933 66.954071 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 24.5 87.5 cm
-5.48 6 m
(")s
/Cs1 SC
1 1 1 sc
CM
34.045933 34.045933 m
39.318031 28.773857 39.318031 20.226143 34.045933 14.954069 c
28.773857 9.6819677 20.226143 9.6819677 14.954069 14.954069 c
9.6819677 20.226143 9.6819677 28.773857 14.954069 34.045933 c
20.226143 39.318031 28.773857 39.318031 34.045933 34.045933 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -7 164 cm
41.045933 129.95407 m
46.318031 135.22615 46.318031 143.77385 41.045933 149.04593 c
35.773857 154.31804 27.226143 154.31804 21.954069 149.04593 c
16.681969 143.77385 16.681969 135.22615 21.954069 129.95407 c
27.226143 124.68197 35.773857 124.68197 41.045933 129.95407 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 24.5 24.5 cm
-5.776 6 m
(#)s
/Cs1 SC
1 1 1 sc
CM
115.04593 34.045933 m
120.31803 28.773857 120.31803 20.226143 115.04593 14.954069 c
109.77386 9.6819677 101.22614 9.6819677 95.954071 14.954069 c
90.681969 20.226143 90.681969 28.773857 95.954071 34.045933 c
101.22614 39.318031 109.77386 39.318031 115.04593 34.045933 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -7 164 cm
122.04593 129.95407 m
127.31803 135.22615 127.31803 143.77385 122.04593 149.04593 c
116.77386 154.31804 108.22614 154.31804 102.95407 149.04593 c
97.681969 143.77385 97.681969 135.22615 102.95407 129.95407 c
108.22614 124.68197 116.77386 124.68197 122.04593 129.95407 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 105.5 24.5 cm
-5.48 6 m
(")s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -7 164 cm
67.53688 33.255745 m
46.800949 58.138863 l
S
0 i
CM
34.679474 99.71537 m
42.10561 103.94058 l
37.496284 107.78169 l
h
34.679474 99.71537 m
f
0 J
0 j
1 0 0 -1 -7 164 cm
41.679474 64.28463 m
49.10561 60.059418 l
44.496284 56.218311 l
h
41.679474 64.28463 m
S
1 J
1 j
0.60000002 i
45.500008 76.499985 m
88.599991 76.499985 l
S
0 i
CM
89.599991 87.500015 m
81.599991 90.500015 l
81.599991 84.500015 l
h
89.599991 87.500015 m
f
0 J
0 j
1 0 0 -1 -7 164 cm
96.599991 76.499985 m
88.599991 73.499985 l
88.599991 79.499985 l
h
96.599991 76.499985 m
S
1 J
1 j
0.60000002 i
101.44797 130.90398 m
50.366623 91.174042 l
S
0 i
CM
37.051804 77.737488 m
41.524799 70.457901 l
45.208443 75.194016 l
h
37.051804 77.737488 m
f
0 J
0 j
1 0 0 -1 -7 164 cm
44.051804 86.262512 m
48.524799 93.542099 l
52.208443 88.805984 l
h
44.051804 86.262512 m
S
1 J
1 j
0.60000002 i
31.499985 90.500008 m
31.499985 115.59999 l
S
0 i
CM
24.499985 40.400005 m
27.499985 48.400005 l
21.499985 48.400005 l
h
24.499985 40.400005 m
f
0 J
0 j
1 0 0 -1 -7 164 cm
31.499985 123.59999 m
34.499985 115.59999 l
28.499985 115.59999 l
h
31.499985 123.59999 m
S
1 J
1 j
0.60000002 i
104.73276 64.849144 m
89.758774 42.388157 l
S
0 i
CM
78.321167 128.26825 m
80.262619 119.94775 l
85.254921 123.27595 l
h
78.321167 128.26825 m
f
0 J
0 j
1 0 0 -1 -7 164 cm
85.321167 35.731754 m
87.262619 44.052258 l
92.254921 40.724056 l
h
85.321167 35.731754 m
S
1 J
1 j
0.60000002 i
98.499992 139.50002 m
55.400005 139.50002 l
S
0 i
CM
40.400005 24.499985 m
48.400005 21.499985 l
48.400005 27.499985 l
h
40.400005 24.499985 m
f
0 J
0 j
1 0 0 -1 -7 164 cm
47.400005 139.50002 m
55.400005 142.50002 l
55.400005 136.50002 l
h
47.400005 139.50002 m
S
1 J
1 j
0.60000002 i
114.48001 125.63992 m
115.31992 119.76054 117 113.87939 117 108 c
117 105.36806 116.66332 102.73576 116.21604 100.10342 c
S
0 i
CM
107.8133 71.769379 m
106.26312 63.36718 l
112.17009 64.419662 l
h
107.8133 71.769379 m
f
0 J
0 j
1 0 0 -1 -7 164 cm
114.8133 92.230621 m
113.26312 100.63282 l
119.17009 99.580338 l
h
114.8133 92.230621 m
S
1 J
1 j
0.60000002 i
110.51999 90.360085 m
109.68008 96.239464 108 102.12061 108 108 c
108 110.63194 108.33668 113.26424 108.78396 115.89658 c
S
0 i
CM
103.1867 40.230621 m
104.73688 48.63282 l
98.82991 47.580338 l
h
103.1867 40.230621 m
f
0 J
0 j
1 0 0 -1 -7 164 cm
110.1867 123.76938 m
111.73688 115.36718 l
105.82991 116.41966 l
h
110.1867 123.76938 m
S
ep
end
%%Trailer
%%EOF
